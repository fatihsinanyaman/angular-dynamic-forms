import "reflect-metadata";
export const METADATA_KEY_SERIALIZABLE = "SERIALIZABLE";
export function serializable(name) {
    return (target, key) => {
        Reflect.defineMetadata(METADATA_KEY_SERIALIZABLE, { key, name: name || key }, target, key);
    };
}
export function getSerializables(target) {
    const serializables = [];
    for (const key in target) {
        const metadata = Reflect.getMetadata(METADATA_KEY_SERIALIZABLE, target, key);
        if (metadata) {
            serializables.push(metadata);
        }
    }
    return serializables;
}
export function serialize(target, prototype) {
    return getSerializables(prototype || target).reduce((prev, prop) => {
        prev[prop.name] = target[prop.key];
        return prev;
    }, {});
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWFsaXphYmxlLmRlY29yYXRvci5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BuZy1keW5hbWljLWZvcm1zL2NvcmUvIiwic291cmNlcyI6WyJsaWIvZGVjb3JhdG9yL3NlcmlhbGl6YWJsZS5kZWNvcmF0b3IudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxrQkFBa0IsQ0FBQztBQUkxQixNQUFNLENBQUMsTUFBTSx5QkFBeUIsR0FBRyxjQUFjLENBQUM7QUFReEQsTUFBTSxVQUFVLFlBQVksQ0FBQyxJQUFhO0lBRXRDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFLEVBQUU7UUFDbkIsT0FBTyxDQUFDLGNBQWMsQ0FBQyx5QkFBeUIsRUFBRSxFQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxJQUFJLEdBQUcsRUFBQyxFQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsQ0FBQztJQUM3RixDQUFDLENBQUM7QUFDTixDQUFDO0FBRUQsTUFBTSxVQUFVLGdCQUFnQixDQUFDLE1BQVc7SUFFeEMsTUFBTSxhQUFhLEdBQUcsRUFBRSxDQUFDO0lBRXpCLEtBQUssTUFBTSxHQUFHLElBQUksTUFBTSxFQUFFO1FBRXRCLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUMseUJBQXlCLEVBQUUsTUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDO1FBRTdFLElBQUksUUFBUSxFQUFFO1lBQ1YsYUFBYSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsQ0FBQztTQUNoQztLQUNKO0lBRUQsT0FBTyxhQUFhLENBQUM7QUFDekIsQ0FBQztBQUVELE1BQU0sVUFBVSxTQUFTLENBQUMsTUFBVyxFQUFFLFNBQWU7SUFFbEQsT0FBTyxnQkFBZ0IsQ0FBQyxTQUFTLElBQUksTUFBTSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsSUFBUyxFQUFFLElBQTBCLEVBQUUsRUFBRTtRQUUxRixJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7UUFFbkMsT0FBTyxJQUFJLENBQUM7SUFFaEIsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBcInJlZmxlY3QtbWV0YWRhdGFcIjtcblxuZGVjbGFyZSBsZXQgUmVmbGVjdDogYW55O1xuXG5leHBvcnQgY29uc3QgTUVUQURBVEFfS0VZX1NFUklBTElaQUJMRSA9IFwiU0VSSUFMSVpBQkxFXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VyaWFsaXphYmxlUHJvcGVydHkge1xuXG4gICAga2V5OiBzdHJpbmc7XG4gICAgbmFtZTogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXphYmxlKG5hbWU/OiBzdHJpbmcpOiAodGFyZ2V0OiBhbnksIGtleTogc3RyaW5nKSA9PiB2b2lkIHtcblxuICAgIHJldHVybiAodGFyZ2V0LCBrZXkpID0+IHtcbiAgICAgICAgUmVmbGVjdC5kZWZpbmVNZXRhZGF0YShNRVRBREFUQV9LRVlfU0VSSUFMSVpBQkxFLCB7a2V5LCBuYW1lOiBuYW1lIHx8IGtleX0sIHRhcmdldCwga2V5KTtcbiAgICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VyaWFsaXphYmxlcyh0YXJnZXQ6IGFueSk6IFNlcmlhbGl6YWJsZVByb3BlcnR5W10ge1xuXG4gICAgY29uc3Qgc2VyaWFsaXphYmxlcyA9IFtdO1xuXG4gICAgZm9yIChjb25zdCBrZXkgaW4gdGFyZ2V0KSB7XG5cbiAgICAgICAgY29uc3QgbWV0YWRhdGEgPSBSZWZsZWN0LmdldE1ldGFkYXRhKE1FVEFEQVRBX0tFWV9TRVJJQUxJWkFCTEUsIHRhcmdldCwga2V5KTtcblxuICAgICAgICBpZiAobWV0YWRhdGEpIHtcbiAgICAgICAgICAgIHNlcmlhbGl6YWJsZXMucHVzaChtZXRhZGF0YSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gc2VyaWFsaXphYmxlcztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHNlcmlhbGl6ZSh0YXJnZXQ6IGFueSwgcHJvdG90eXBlPzogYW55KTogb2JqZWN0IHtcblxuICAgIHJldHVybiBnZXRTZXJpYWxpemFibGVzKHByb3RvdHlwZSB8fCB0YXJnZXQpLnJlZHVjZSgocHJldjogYW55LCBwcm9wOiBTZXJpYWxpemFibGVQcm9wZXJ0eSkgPT4ge1xuXG4gICAgICAgIHByZXZbcHJvcC5uYW1lXSA9IHRhcmdldFtwcm9wLmtleV07XG5cbiAgICAgICAgcmV0dXJuIHByZXY7XG5cbiAgICB9LCB7fSk7XG59XG4iXX0=