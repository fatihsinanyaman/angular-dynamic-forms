import { __decorate, __metadata } from "tslib";
import { DynamicFormValueControlModel } from "../dynamic-form-value-control.model";
import { serializable } from "../../decorator/serializable.decorator";
import { isBoolean, isNumber } from "../../utils/core.utils";
export const DYNAMIC_FORM_CONTROL_TYPE_SLIDER = "SLIDER";
export class DynamicSliderModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        super(config, layout);
        this.type = DYNAMIC_FORM_CONTROL_TYPE_SLIDER;
        this.max = isNumber(config.max) ? config.max : 10;
        this.min = isNumber(config.min) ? config.min : 0;
        this.step = isNumber(config.step) ? config.step : 1;
        this.vertical = isBoolean(config.vertical) ? config.vertical : false;
    }
}
__decorate([
    serializable(),
    __metadata("design:type", Number)
], DynamicSliderModel.prototype, "max", void 0);
__decorate([
    serializable(),
    __metadata("design:type", Number)
], DynamicSliderModel.prototype, "min", void 0);
__decorate([
    serializable(),
    __metadata("design:type", Number)
], DynamicSliderModel.prototype, "step", void 0);
__decorate([
    serializable(),
    __metadata("design:type", Boolean)
], DynamicSliderModel.prototype, "vertical", void 0);
__decorate([
    serializable(),
    __metadata("design:type", String)
], DynamicSliderModel.prototype, "type", void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1zbGlkZXIubW9kZWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbmctZHluYW1pYy1mb3Jtcy9jb3JlLyIsInNvdXJjZXMiOlsibGliL21vZGVsL3NsaWRlci9keW5hbWljLXNsaWRlci5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFzQyw0QkFBNEIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBRXZILE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBRTdELE1BQU0sQ0FBQyxNQUFNLGdDQUFnQyxHQUFHLFFBQVEsQ0FBQztBQVV6RCxNQUFNLE9BQU8sa0JBQW1CLFNBQVEsNEJBQW9DO0lBU3hFLFlBQVksTUFBZ0MsRUFBRSxNQUFpQztRQUUzRSxLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBSkQsU0FBSSxHQUFXLGdDQUFnQyxDQUFDO1FBTXJFLElBQUksQ0FBQyxHQUFHLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQ2xELElBQUksQ0FBQyxHQUFHLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2pELElBQUksQ0FBQyxJQUFJLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3BELElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3pFLENBQUM7Q0FDSjtBQWhCbUI7SUFBZixZQUFZLEVBQUU7OytDQUFvQjtBQUNuQjtJQUFmLFlBQVksRUFBRTs7K0NBQW9CO0FBQ25CO0lBQWYsWUFBWSxFQUFFOztnREFBcUI7QUFDcEI7SUFBZixZQUFZLEVBQUU7O29EQUFtQjtBQUVsQjtJQUFmLFlBQVksRUFBRTs7Z0RBQTBEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRHluYW1pY0Zvcm1WYWx1ZUNvbnRyb2xNb2RlbENvbmZpZywgRHluYW1pY0Zvcm1WYWx1ZUNvbnRyb2xNb2RlbCB9IGZyb20gXCIuLi9keW5hbWljLWZvcm0tdmFsdWUtY29udHJvbC5tb2RlbFwiO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0IH0gZnJvbSBcIi4uL21pc2MvZHluYW1pYy1mb3JtLWNvbnRyb2wtbGF5b3V0Lm1vZGVsXCI7XG5pbXBvcnQgeyBzZXJpYWxpemFibGUgfSBmcm9tIFwiLi4vLi4vZGVjb3JhdG9yL3NlcmlhbGl6YWJsZS5kZWNvcmF0b3JcIjtcbmltcG9ydCB7IGlzQm9vbGVhbiwgaXNOdW1iZXIgfSBmcm9tIFwiLi4vLi4vdXRpbHMvY29yZS51dGlsc1wiO1xuXG5leHBvcnQgY29uc3QgRFlOQU1JQ19GT1JNX0NPTlRST0xfVFlQRV9TTElERVIgPSBcIlNMSURFUlwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIER5bmFtaWNTbGlkZXJNb2RlbENvbmZpZyBleHRlbmRzIER5bmFtaWNGb3JtVmFsdWVDb250cm9sTW9kZWxDb25maWc8bnVtYmVyPiB7XG5cbiAgICBtYXg/OiBudW1iZXI7XG4gICAgbWluPzogbnVtYmVyO1xuICAgIHN0ZXA/OiBudW1iZXI7XG4gICAgdmVydGljYWw/OiBib29sZWFuO1xufVxuXG5leHBvcnQgY2xhc3MgRHluYW1pY1NsaWRlck1vZGVsIGV4dGVuZHMgRHluYW1pY0Zvcm1WYWx1ZUNvbnRyb2xNb2RlbDxudW1iZXI+IHtcblxuICAgIEBzZXJpYWxpemFibGUoKSBtYXg6IG51bWJlciB8IG51bGw7XG4gICAgQHNlcmlhbGl6YWJsZSgpIG1pbjogbnVtYmVyIHwgbnVsbDtcbiAgICBAc2VyaWFsaXphYmxlKCkgc3RlcDogbnVtYmVyIHwgbnVsbDtcbiAgICBAc2VyaWFsaXphYmxlKCkgdmVydGljYWw6IGJvb2xlYW47XG5cbiAgICBAc2VyaWFsaXphYmxlKCkgcmVhZG9ubHkgdHlwZTogc3RyaW5nID0gRFlOQU1JQ19GT1JNX0NPTlRST0xfVFlQRV9TTElERVI7XG5cbiAgICBjb25zdHJ1Y3Rvcihjb25maWc6IER5bmFtaWNTbGlkZXJNb2RlbENvbmZpZywgbGF5b3V0PzogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0KSB7XG5cbiAgICAgICAgc3VwZXIoY29uZmlnLCBsYXlvdXQpO1xuXG4gICAgICAgIHRoaXMubWF4ID0gaXNOdW1iZXIoY29uZmlnLm1heCkgPyBjb25maWcubWF4IDogMTA7XG4gICAgICAgIHRoaXMubWluID0gaXNOdW1iZXIoY29uZmlnLm1pbikgPyBjb25maWcubWluIDogMDtcbiAgICAgICAgdGhpcy5zdGVwID0gaXNOdW1iZXIoY29uZmlnLnN0ZXApID8gY29uZmlnLnN0ZXAgOiAxO1xuICAgICAgICB0aGlzLnZlcnRpY2FsID0gaXNCb29sZWFuKGNvbmZpZy52ZXJ0aWNhbCkgPyBjb25maWcudmVydGljYWwgOiBmYWxzZTtcbiAgICB9XG59Il19