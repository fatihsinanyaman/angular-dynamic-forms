{"version":3,"file":"dynamic-form-control-container.component.d.ts","sources":["dynamic-form-control-container.component.d.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA","sourcesContent":["import { ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, EventEmitter, OnChanges, OnDestroy, QueryList, SimpleChanges, Type, ViewContainerRef } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { DynamicFormControlCustomEvent, DynamicFormControlEvent } from \"./dynamic-form-control-event\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormArrayGroupModel } from \"../model/form-array/dynamic-form-array.model\";\nimport { DynamicFormControlLayout, DynamicFormControlLayoutContext, DynamicFormControlLayoutPlace } from \"../model/misc/dynamic-form-control-layout.model\";\nimport { DynamicFormControl } from \"./dynamic-form-control-interface\";\nimport { DynamicTemplateDirective } from \"../directive/dynamic-template.directive\";\nimport { DynamicFormLayout, DynamicFormLayoutService } from \"../service/dynamic-form-layout.service\";\nimport { DynamicFormValidationService } from \"../service/dynamic-form-validation.service\";\nimport { DynamicFormComponentService } from \"../service/dynamic-form-component.service\";\nimport { DynamicFormRelationService } from \"../service/dynamic-form-relation.service\";\nexport declare abstract class DynamicFormControlContainerComponent implements OnChanges, OnDestroy {\n    protected changeDetectorRef: ChangeDetectorRef;\n    protected componentFactoryResolver: ComponentFactoryResolver;\n    protected layoutService: DynamicFormLayoutService;\n    protected validationService: DynamicFormValidationService;\n    protected componentService: DynamicFormComponentService;\n    protected relationService: DynamicFormRelationService;\n    private _hasFocus;\n    context: DynamicFormArrayGroupModel | null;\n    control: FormControl;\n    group: FormGroup;\n    hostClass: string[];\n    klass: string;\n    layout: DynamicFormLayout;\n    model: DynamicFormControlModel;\n    contentTemplateList: QueryList<DynamicTemplateDirective> | undefined;\n    inputTemplateList: QueryList<DynamicTemplateDirective> | undefined;\n    blur: EventEmitter<DynamicFormControlEvent>;\n    change: EventEmitter<DynamicFormControlEvent>;\n    customEvent: EventEmitter<DynamicFormControlEvent> | undefined;\n    focus: EventEmitter<DynamicFormControlEvent>;\n    componentViewContainerRef: ViewContainerRef;\n    protected componentRef: ComponentRef<DynamicFormControl>;\n    protected componentSubscriptions: Subscription[];\n    protected controlLayout: DynamicFormControlLayout;\n    protected subscriptions: Subscription[];\n    protected constructor(changeDetectorRef: ChangeDetectorRef, componentFactoryResolver: ComponentFactoryResolver, layoutService: DynamicFormLayoutService, validationService: DynamicFormValidationService, componentService: DynamicFormComponentService, relationService: DynamicFormRelationService);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    abstract get componentType(): Type<DynamicFormControl> | null;\n    get id(): string;\n    get hasFocus(): boolean;\n    get isInvalid(): boolean;\n    get isValid(): boolean;\n    get errorMessages(): string[];\n    get showErrorMessages(): boolean;\n    get hasLabel(): boolean;\n    get hasHint(): boolean;\n    get hint(): string | null;\n    get isCheckbox(): boolean;\n    get templates(): QueryList<DynamicTemplateDirective> | undefined;\n    get startTemplate(): DynamicTemplateDirective | undefined;\n    get endTemplate(): DynamicTemplateDirective | undefined;\n    getClass(context: DynamicFormControlLayoutContext, place: DynamicFormControlLayoutPlace): string;\n    markForCheck(): void;\n    protected createFormControlComponent(): void;\n    protected destroyFormControlComponent(): void;\n    protected createDynamicFormControlEvent($event: any, type: string): DynamicFormControlEvent;\n    unsubscribe(): void;\n    onControlValueChanges(value: any): void;\n    onModelValueUpdates(value: any): void;\n    onModelDisabledUpdates(disabled: boolean): void;\n    onLayoutOrModelChange(): void;\n    onModelChange(): void;\n    onGroupOrModelChange(): void;\n    onChange($event: Event | DynamicFormControlEvent | any): void;\n    onBlur($event: FocusEvent | DynamicFormControlEvent | any): void;\n    onFocus($event: FocusEvent | DynamicFormControlEvent | any): void;\n    onCustomEvent($event: DynamicFormControlEvent | DynamicFormControlCustomEvent): void;\n    private registerFormControlComponentRef;\n    private unregisterFormControlComponentRef;\n}\n"]}