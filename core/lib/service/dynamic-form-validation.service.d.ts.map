{"version":3,"file":"dynamic-form-validation.service.d.ts","sources":["dynamic-form-validation.service.d.ts"],"names":[],"mappings":"AAAA;;;;;;AAKA;;;;;;;;;;;;;;;;;;;;AAmBA","sourcesContent":["import { AbstractControl, AsyncValidatorFn, ValidatorFn } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicValidatorsConfig } from \"../model/misc/dynamic-form-control-validation.model\";\nimport { Validator, ValidatorFactory } from \"./dynamic-form-validators\";\nimport { DynamicErrorMessagesMatcher } from \"./dynamic-form-validation-matchers\";\nexport declare class DynamicFormValidationService {\n    private _NG_VALIDATORS;\n    private _NG_ASYNC_VALIDATORS;\n    private _DYNAMIC_VALIDATORS;\n    private _DYNAMIC_ERROR_MESSAGES_MATCHER;\n    constructor(_NG_VALIDATORS: ValidatorFn[], _NG_ASYNC_VALIDATORS: AsyncValidatorFn[], _DYNAMIC_VALIDATORS: Map<string, Validator | ValidatorFactory>, _DYNAMIC_ERROR_MESSAGES_MATCHER: DynamicErrorMessagesMatcher);\n    private getValidatorFn;\n    private getValidatorFns;\n    getValidator(validatorName: string, validatorArgs?: any): ValidatorFn;\n    getAsyncValidator(validatorName: string, validatorArgs?: any): AsyncValidatorFn;\n    getValidators(validatorsConfig: DynamicValidatorsConfig): ValidatorFn[];\n    getAsyncValidators(asyncValidatorsConfig: DynamicValidatorsConfig): AsyncValidatorFn[];\n    updateValidators(validatorsConfig: DynamicValidatorsConfig | null, control: AbstractControl, model: DynamicFormControlModel): void;\n    updateAsyncValidators(asyncValidatorsConfig: DynamicValidatorsConfig | null, control: AbstractControl, model: DynamicFormControlModel): void;\n    showErrorMessages(control: AbstractControl, model: DynamicFormControlModel, hasFocus: boolean): boolean;\n    parseErrorMessageConfig(template: string, model: DynamicFormControlModel, error?: any): string;\n    createErrorMessages(control: AbstractControl, model: DynamicFormControlModel): string[];\n    isFormHook(value: any): boolean;\n    isValidatorDescriptor(value: any): boolean;\n}\n"]}