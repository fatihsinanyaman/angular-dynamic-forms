{"version":3,"file":"dynamic-form-relation.service.d.ts","sources":["dynamic-form-relation.service.d.ts"],"names":[],"mappings":"AAAA;;;;;;;AAMA;;;;;;;;;;;;AAWA","sourcesContent":["import { Injector } from \"@angular/core\";\nimport { FormControl, FormGroup } from \"@angular/forms\";\nimport { DynamicFormControlModel } from \"../model/dynamic-form-control.model\";\nimport { DynamicFormControlMatcher } from \"./dynamic-form-relation-matchers\";\nimport { DynamicFormControlRelation } from \"../model/misc/dynamic-form-control-relation.model\";\nimport { Subscription } from \"rxjs\";\nexport declare type DynamicRelatedFormControls = {\n    [key: string]: FormControl;\n};\nexport declare class DynamicFormRelationService {\n    private MATCHERS;\n    private injector;\n    constructor(MATCHERS: DynamicFormControlMatcher[], injector: Injector);\n    getRelatedFormControls(model: DynamicFormControlModel, group: FormGroup): DynamicRelatedFormControls;\n    findRelationByMatcher(relations: DynamicFormControlRelation[], matcher: DynamicFormControlMatcher): DynamicFormControlRelation | undefined;\n    matchesCondition(relation: DynamicFormControlRelation, relatedFormControls: DynamicRelatedFormControls, matcher: DynamicFormControlMatcher): boolean;\n    subscribeRelations(model: DynamicFormControlModel, group: FormGroup, control: FormControl): Subscription[];\n}\n"]}