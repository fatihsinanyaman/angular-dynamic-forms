import { __decorate, __metadata } from "tslib";
import { DynamicFormControlModel } from "../dynamic-form-control.model";
import { serializable } from "../../decorator/serializable.decorator";
export const DYNAMIC_FORM_CONTROL_TYPE_GROUP = "GROUP";
export class DynamicFormGroupModel extends DynamicFormControlModel {
    constructor(config, layout) {
        var _a;
        super(config, layout);
        this.group = [];
        this.type = DYNAMIC_FORM_CONTROL_TYPE_GROUP;
        this.group = Array.isArray(config.group) ? config.group : [];
        this.legend = (_a = config.legend) !== null && _a !== void 0 ? _a : null;
    }
    get(index) {
        return this.group[index];
    }
    set(index, controlModel) {
        this.group[index] = controlModel;
    }
    add(controlModel) {
        this.group.push(controlModel);
    }
    insert(index, controlModel) {
        this.group.splice(index, 0, controlModel);
    }
    move(index, step) {
        this.group.splice(index + step, 0, ...this.group.splice(index, 1));
    }
    remove(index) {
        this.group.splice(index, 1);
    }
    size() {
        return this.group.length;
    }
}
__decorate([
    serializable(),
    __metadata("design:type", Array)
], DynamicFormGroupModel.prototype, "group", void 0);
__decorate([
    serializable(),
    __metadata("design:type", String)
], DynamicFormGroupModel.prototype, "legend", void 0);
__decorate([
    serializable(),
    __metadata("design:type", String)
], DynamicFormGroupModel.prototype, "type", void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1mb3JtLWdyb3VwLm1vZGVsLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQG5nLWR5bmFtaWMtZm9ybXMvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9tb2RlbC9mb3JtLWdyb3VwL2R5bmFtaWMtZm9ybS1ncm91cC5tb2RlbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFpQyxNQUFNLCtCQUErQixDQUFDO0FBR3ZHLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUV0RSxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FBRyxPQUFPLENBQUM7QUFRdkQsTUFBTSxPQUFPLHFCQUFzQixTQUFRLHVCQUF1QjtJQU85RCxZQUFZLE1BQW1DLEVBQUUsTUFBaUM7O1FBRTlFLEtBQUssQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLENBQUM7UUFQVixVQUFLLEdBQXFCLEVBQUUsQ0FBQztRQUdwQixTQUFJLEdBQVcsK0JBQStCLENBQUM7UUFNcEUsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDO1FBQzdELElBQUksQ0FBQyxNQUFNLFNBQUcsTUFBTSxDQUFDLE1BQU0sbUNBQUksSUFBSSxDQUFDO0lBQ3hDLENBQUM7SUFFRCxHQUFHLENBQUMsS0FBYTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3QixDQUFDO0lBRUQsR0FBRyxDQUFDLEtBQWEsRUFBRSxZQUFxQztRQUNwRCxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLFlBQVksQ0FBQztJQUNyQyxDQUFDO0lBRUQsR0FBRyxDQUFDLFlBQXFDO1FBQ3JDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ2xDLENBQUM7SUFFRCxNQUFNLENBQUMsS0FBYSxFQUFFLFlBQXFDO1FBQ3ZELElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLEVBQUUsWUFBWSxDQUFDLENBQUM7SUFDOUMsQ0FBQztJQUVELElBQUksQ0FBQyxLQUFhLEVBQUUsSUFBWTtRQUM1QixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEdBQUcsSUFBSSxFQUFFLENBQUMsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3ZFLENBQUM7SUFFRCxNQUFNLENBQUMsS0FBYTtRQUNoQixJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDaEMsQ0FBQztJQUVELElBQUk7UUFDQSxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDO0lBQzdCLENBQUM7Q0FDSjtBQXhDbUI7SUFBZixZQUFZLEVBQUU7O29EQUE4QjtBQUM3QjtJQUFmLFlBQVksRUFBRTs7cURBQXVCO0FBRXRCO0lBQWYsWUFBWSxFQUFFOzttREFBeUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEeW5hbWljRm9ybUNvbnRyb2xNb2RlbCwgRHluYW1pY0Zvcm1Db250cm9sTW9kZWxDb25maWcgfSBmcm9tIFwiLi4vZHluYW1pYy1mb3JtLWNvbnRyb2wubW9kZWxcIjtcbmltcG9ydCB7IER5bmFtaWNGb3JtTW9kZWwgfSBmcm9tIFwiLi4vZHluYW1pYy1mb3JtLm1vZGVsXCI7XG5pbXBvcnQgeyBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQgfSBmcm9tIFwiLi4vbWlzYy9keW5hbWljLWZvcm0tY29udHJvbC1sYXlvdXQubW9kZWxcIjtcbmltcG9ydCB7IHNlcmlhbGl6YWJsZSB9IGZyb20gXCIuLi8uLi9kZWNvcmF0b3Ivc2VyaWFsaXphYmxlLmRlY29yYXRvclwiO1xuXG5leHBvcnQgY29uc3QgRFlOQU1JQ19GT1JNX0NPTlRST0xfVFlQRV9HUk9VUCA9IFwiR1JPVVBcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEeW5hbWljRm9ybUdyb3VwTW9kZWxDb25maWcgZXh0ZW5kcyBEeW5hbWljRm9ybUNvbnRyb2xNb2RlbENvbmZpZyB7XG5cbiAgICBncm91cD86IER5bmFtaWNGb3JtTW9kZWw7XG4gICAgbGVnZW5kPzogc3RyaW5nO1xufVxuXG5leHBvcnQgY2xhc3MgRHluYW1pY0Zvcm1Hcm91cE1vZGVsIGV4dGVuZHMgRHluYW1pY0Zvcm1Db250cm9sTW9kZWwge1xuXG4gICAgQHNlcmlhbGl6YWJsZSgpIGdyb3VwOiBEeW5hbWljRm9ybU1vZGVsID0gW107XG4gICAgQHNlcmlhbGl6YWJsZSgpIGxlZ2VuZDogc3RyaW5nIHwgbnVsbDtcblxuICAgIEBzZXJpYWxpemFibGUoKSByZWFkb25seSB0eXBlOiBzdHJpbmcgPSBEWU5BTUlDX0ZPUk1fQ09OVFJPTF9UWVBFX0dST1VQO1xuXG4gICAgY29uc3RydWN0b3IoY29uZmlnOiBEeW5hbWljRm9ybUdyb3VwTW9kZWxDb25maWcsIGxheW91dD86IER5bmFtaWNGb3JtQ29udHJvbExheW91dCkge1xuXG4gICAgICAgIHN1cGVyKGNvbmZpZywgbGF5b3V0KTtcblxuICAgICAgICB0aGlzLmdyb3VwID0gQXJyYXkuaXNBcnJheShjb25maWcuZ3JvdXApID8gY29uZmlnLmdyb3VwIDogW107XG4gICAgICAgIHRoaXMubGVnZW5kID0gY29uZmlnLmxlZ2VuZCA/PyBudWxsO1xuICAgIH1cblxuICAgIGdldChpbmRleDogbnVtYmVyKTogRHluYW1pY0Zvcm1Db250cm9sTW9kZWwge1xuICAgICAgICByZXR1cm4gdGhpcy5ncm91cFtpbmRleF07XG4gICAgfVxuXG4gICAgc2V0KGluZGV4OiBudW1iZXIsIGNvbnRyb2xNb2RlbDogRHluYW1pY0Zvcm1Db250cm9sTW9kZWwsKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZ3JvdXBbaW5kZXhdID0gY29udHJvbE1vZGVsO1xuICAgIH1cblxuICAgIGFkZChjb250cm9sTW9kZWw6IER5bmFtaWNGb3JtQ29udHJvbE1vZGVsKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZ3JvdXAucHVzaChjb250cm9sTW9kZWwpO1xuICAgIH1cblxuICAgIGluc2VydChpbmRleDogbnVtYmVyLCBjb250cm9sTW9kZWw6IER5bmFtaWNGb3JtQ29udHJvbE1vZGVsKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZ3JvdXAuc3BsaWNlKGluZGV4LCAwLCBjb250cm9sTW9kZWwpO1xuICAgIH1cblxuICAgIG1vdmUoaW5kZXg6IG51bWJlciwgc3RlcDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMuZ3JvdXAuc3BsaWNlKGluZGV4ICsgc3RlcCwgMCwgLi4udGhpcy5ncm91cC5zcGxpY2UoaW5kZXgsIDEpKTtcbiAgICB9XG5cbiAgICByZW1vdmUoaW5kZXg6IG51bWJlcikge1xuICAgICAgICB0aGlzLmdyb3VwLnNwbGljZShpbmRleCwgMSk7XG4gICAgfVxuXG4gICAgc2l6ZSgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5ncm91cC5sZW5ndGg7XG4gICAgfVxufVxuIl19